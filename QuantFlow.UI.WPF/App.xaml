<Application x:Class="QuantFlow.UI.WPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:QuantFlow.UI.WPF.Converters">
    <Application.Resources>

        <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
        <converters:IsLastItemConverter x:Key="IsLastItemConverter"/>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converters:BooleanAndToVisibilityConverter x:Key="BooleanAndToVisibilityConverter"/>
        <converters:CountToVisibilityConverter x:Key="CountToVisibilityConverter"/>
        <converters:DialogModeToVisibilityConverter x:Key="DialogModeToVisibilityConverter"/>
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        <converters:FirstLetterConverter x:Key="FirstLetterConverter"/>

        <!-- Theme Color Resources (will be updated dynamically by ThemeService) -->
        <SolidColorBrush x:Key="PrimaryColor" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="SecondaryColor" Color="#F7F7F7"/>
        <SolidColorBrush x:Key="AccentColor" Color="#0078D4"/>
        <SolidColorBrush x:Key="BackgroundColor" Color="#FAFAFA"/>
        <SolidColorBrush x:Key="SurfaceColor" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TextPrimaryColor" Color="#1A1A1A"/>
        <SolidColorBrush x:Key="TextSecondaryColor" Color="#666666"/>
        <SolidColorBrush x:Key="BorderColor" Color="#E0E0E0"/>
        <SolidColorBrush x:Key="ShadowColor" Color="#000000"/>
        <SolidColorBrush x:Key="HoverColor" Color="#EEEEEE"/>
        <SolidColorBrush x:Key="SidebarHoverColor" Color="#F5F5F5"/>

        <!-- Sidebar Button Style -->
        <Style x:Key="SidebarButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="48"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Padding" Value="16,0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                        Background="{TemplateBinding Background}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="8"
                        Margin="8,2">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="Center"
                                    Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource SidebarHoverColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Sidebar Expander Style -->
        <Style x:Key="SidebarExpanderStyle" TargetType="Expander">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
            <Setter Property="Margin" Value="8,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <DockPanel>
                            <ToggleButton x:Name="ExpanderButton"
                                  DockPanel.Dock="Top"
                                  IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                  Background="Transparent"
                                  BorderThickness="0"
                                  Padding="16,12"
                                  HorizontalContentAlignment="Stretch"
                                  Cursor="Hand">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter Grid.Column="0" 
                                            ContentSource="Header"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"/>
                                    <TextBlock Grid.Column="1" 
                                     Text="&#xE76C;" 
                                     FontFamily="Segoe MDL2 Assets" 
                                     FontSize="12"
                                     VerticalAlignment="Center"
                                     Margin="8,0,0,0"
                                     RenderTransformOrigin="0.5,0.5">
                                        <TextBlock.RenderTransform>
                                            <RotateTransform Angle="90"/>
                                        </TextBlock.RenderTransform>
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType=Expander}}" Value="True">
                                                        <DataTrigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)"
                                                                           To="270" Duration="0:0:0.2"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.EnterActions>
                                                        <DataTrigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)"
                                                                           To="90" Duration="0:0:0.2"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.ExitActions>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Border x:Name="Border"
                                                    Background="{TemplateBinding Background}"
                                                    CornerRadius="8"
                                                    Padding="{TemplateBinding Padding}">
                                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SidebarHoverColor}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <ContentPresenter x:Name="Content" DockPanel.Dock="Bottom" Visibility="Collapsed"/>
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="Content" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Primary Button Style -->
        <Style x:Key="PrimaryButton" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource AccentColor}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="16,10"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="MinHeight" Value="40"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Opacity" Value="0.9"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Secondary Button Style -->
        <Style x:Key="SecondaryButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="16,10"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="MinHeight" Value="40"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource HoverColor}"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource SurfaceColor}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Danger Button Style (for delete actions) -->
        <Style x:Key="DangerButton" TargetType="Button">
            <Setter Property="Background" Value="#db4f4a"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="16,10"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="MinHeight" Value="40"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="6"
                        Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#c44440"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TextBox Style -->
        <Style x:Key="ModernTextBox" TargetType="TextBox">
            <Setter Property="Background" Value="{DynamicResource SurfaceColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
            <Setter Property="CaretBrush" Value="{DynamicResource TextPrimaryColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="12,0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="6"
                        SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                Focusable="False"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden"
                                VerticalAlignment="Center"
                                Margin="12,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- PasswordBox Style -->
        <Style x:Key="ModernPasswordBox" TargetType="PasswordBox">
            <Setter Property="Background" Value="{DynamicResource SurfaceColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
            <Setter Property="CaretBrush" Value="{DynamicResource TextPrimaryColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="12,0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="6"
                        SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                Focusable="False"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden"
                                VerticalAlignment="Center"
                                Margin="12,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ComboBox Style -->
        <Style x:Key="ModernComboBox" TargetType="ComboBox">
            <Setter Property="Background" Value="{DynamicResource SurfaceColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,6"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton"
                                  Grid.Column="2"
                                  Focusable="False"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  ClickMode="Press"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Border x:Name="Border"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    CornerRadius="6">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition Width="20"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Path x:Name="Arrow"
                                                          Grid.Column="1"
                                                          HorizontalAlignment="Center"
                                                          VerticalAlignment="Center"
                                                          Data="M 0 0 L 4 4 L 8 0 Z"
                                                          Fill="{DynamicResource TextSecondaryColor}"/>
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <ContentPresenter x:Name="ContentSite"
                                      IsHitTestVisible="False"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      Margin="10,0,25,0"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                            <Popup x:Name="Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Slide">
                                <Grid x:Name="DropDown"
                              SnapsToDevicePixels="True"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="200">
                                    <Border x:Name="DropDownBorder"
                                    Background="{DynamicResource SurfaceColor}"
                                    BorderThickness="1"
                                    BorderBrush="{DynamicResource BorderColor}"
                                    CornerRadius="6"
                                    Margin="0,2,0,0">
                                        <Border.Effect>
                                            <DropShadowEffect Color="Black" BlurRadius="8" ShadowDepth="2" Opacity="0.2"/>
                                        </Border.Effect>
                                        <ScrollViewer Margin="4,6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Padding" Value="10,8"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBoxItem">
                                    <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    Padding="{TemplateBinding Padding}"
                                    CornerRadius="4"
                                    Margin="2">
                                        <ContentPresenter>
                                            <ContentPresenter.Resources>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
                                                </Style>
                                            </ContentPresenter.Resources>
                                        </ContentPresenter>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsHighlighted" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource HoverColor}"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentColor}"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Crypto Price Card Template -->
        <DataTemplate x:Key="CryptoCardTemplate">
            <Border Background="{DynamicResource SurfaceColor}"
            BorderBrush="{DynamicResource BorderColor}"
            BorderThickness="1"
            CornerRadius="12"
            Width="280"
            Height="180"
            Margin="0,0,20,0"
            Padding="20">
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsSupported}" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Header -->
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Symbol}"
                                   FontSize="18" 
                                   FontWeight="Bold" 
                                   Foreground="{DynamicResource TextPrimaryColor}"
                                   VerticalAlignment="Center"/>
                                <TextBlock Text="{Binding QuoteCurrency}" 
                                   FontSize="14" 
                                   Foreground="{DynamicResource TextSecondaryColor}"
                                   VerticalAlignment="Center"
                                   Margin="2,0,0,0"/>
                            </StackPanel>
                            <TextBlock Text="{Binding Name}" 
                               FontSize="12" 
                               Foreground="{DynamicResource TextSecondaryColor}"
                               Margin="0,2,0,0"/>
                        </StackPanel>

                        <!-- Exchange Badge -->
                        <Border Grid.Column="1"
                        Background="{DynamicResource BackgroundColor}"
                        BorderBrush="{DynamicResource BorderColor}"
                        BorderThickness="1"
                        CornerRadius="4"
                        Padding="8,4"
                        VerticalAlignment="Top">
                            <TextBlock Text="{Binding Exchange}" 
                               FontSize="10"
                               FontWeight="SemiBold"
                               Foreground="{DynamicResource TextSecondaryColor}"/>
                        </Border>
                    </Grid>

                    <!-- Chart -->
                    <ContentControl Grid.Row="1" 
                            Content="{Binding ChartView}"
                            Margin="0,8,0,8"/>

                    <!-- Footer -->
                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- Price or Unsupported Message -->
                        <StackPanel Grid.Column="0">
                            <TextBlock Text="{Binding PriceFormatted}" 
                               FontSize="20" 
                               FontWeight="Bold" 
                               Foreground="{DynamicResource TextPrimaryColor}"
                               Visibility="{Binding IsSupported, Converter={StaticResource BoolToVisibilityConverter}}"/>

                            <TextBlock Text="{Binding UnsupportedMessage}" 
                               FontSize="11" 
                               FontStyle="Italic"
                               Foreground="#db4f4a"
                               Visibility="{Binding IsSupported, Converter={StaticResource InverseBoolToVisibilityConverter}}"/>
                        </StackPanel>

                        <!-- Change Percent with 7D -->
                        <StackPanel Grid.Column="1" 
                            Orientation="Horizontal"
                            VerticalAlignment="Bottom"
                            Visibility="{Binding IsSupported, Converter={StaticResource BoolToVisibilityConverter}}">
                            <TextBlock Text="{Binding ChangeIndicator}" 
                               FontSize="12"
                               Foreground="{Binding ChangeColor}"
                               VerticalAlignment="Center"/>
                            <TextBlock Text="{Binding ChangePercentFormatted}" 
                               FontSize="13"
                               FontWeight="SemiBold"
                               Foreground="{Binding ChangeColor}"
                               Margin="4,0,0,0"
                               VerticalAlignment="Center"/>
                            <TextBlock Text="7D" 
                               FontSize="11" 
                               Foreground="{DynamicResource TextSecondaryColor}"
                               Margin="8,0,0,0"
                               VerticalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Border>
        </DataTemplate>

        <!-- Portfolio Card Template -->
        <DataTemplate x:Key="PortfolioCardTemplate">
            <Border Background="{DynamicResource SurfaceColor}"
            BorderBrush="{DynamicResource BorderColor}"
            BorderThickness="1"
            CornerRadius="12"
            Padding="24"
            Margin="0,0,20,20"
            Width="380">
                <StackPanel>
                    <!-- Header: Portfolio Name + Mode Badge -->
                    <Grid Margin="0,0,0,16">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0"
                           Text="{Binding PortfolioName}" 
                           FontSize="20" 
                           FontWeight="SemiBold" 
                           Foreground="{DynamicResource TextPrimaryColor}"
                           FontFamily="Segoe UI"
                           VerticalAlignment="Center"/>

                        <Border Grid.Column="1"
                        Background="{Binding ModeBadgeColor}"
                        CornerRadius="4"
                        Padding="8,4">
                            <TextBlock Text="{Binding ModeBadgeText}" 
                               FontSize="11" 
                               FontWeight="SemiBold" 
                               Foreground="White"
                               FontFamily="Segoe UI"/>
                        </Border>
                    </Grid>

                    <!-- Exchange (small, subtle) -->
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,16">
                        <TextBlock Text="&#xE945;" 
                           FontFamily="Segoe MDL2 Assets" 
                           FontSize="12"
                           Foreground="{DynamicResource TextSecondaryColor}"
                           VerticalAlignment="Center"
                           Margin="0,0,6,0"/>
                        <TextBlock Text="{Binding Exchange}" 
                           FontSize="12" 
                           Foreground="{DynamicResource TextSecondaryColor}"
                           FontFamily="Segoe UI"
                           VerticalAlignment="Center"/>
                    </StackPanel>

                    <!-- Total Value (Big) -->
                    <StackPanel Margin="0,0,0,8">
                        <TextBlock Text="Total Value" 
                           FontSize="12" 
                           Foreground="{DynamicResource TextSecondaryColor}"
                           FontFamily="Segoe UI"
                           Margin="0,0,0,4"/>
                        <TextBlock Text="{Binding TotalValue}" 
                           FontSize="28" 
                           FontWeight="SemiBold" 
                           Foreground="{DynamicResource TextPrimaryColor}"
                           FontFamily="Segoe UI"/>
                    </StackPanel>

                    <!-- Profit/Loss -->
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,16">
                        <TextBlock Text="{Binding ProfitLoss}" 
                           FontSize="16" 
                           FontWeight="SemiBold" 
                           Foreground="{Binding ProfitLossColor}"
                           FontFamily="Segoe UI"
                           Margin="0,0,8,0"/>
                        <TextBlock Text="{Binding ProfitLossPercent}" 
                           FontSize="14" 
                           Foreground="{Binding ProfitLossColor}"
                           FontFamily="Segoe UI"
                           VerticalAlignment="Center"/>
                    </StackPanel>

                    <Separator Background="{DynamicResource BorderColor}"
                       Height="1"
                       Margin="0,0,0,16"/>

                    <!-- Stats Grid -->
                    <Grid Margin="0,0,0,16">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!-- Allocated Funds -->
                        <StackPanel Grid.Column="0">
                            <TextBlock Text="Allocated" 
                               FontSize="11" 
                               Foreground="{DynamicResource TextSecondaryColor}"
                               FontFamily="Segoe UI"
                               Margin="0,0,0,4"/>
                            <TextBlock Text="{Binding AllocatedFunds}" 
                               FontSize="14" 
                               FontWeight="SemiBold" 
                               Foreground="{DynamicResource TextPrimaryColor}"
                               FontFamily="Segoe UI"/>
                        </StackPanel>

                        <!-- Active Algorithms -->
                        <StackPanel Grid.Column="1" HorizontalAlignment="Right">
                            <TextBlock Text="Active Algorithms" 
                               FontSize="11" 
                               Foreground="{DynamicResource TextSecondaryColor}"
                               FontFamily="Segoe UI"
                               Margin="0,0,0,4"
                               TextAlignment="Right"/>
                            <TextBlock Text="{Binding ActiveAlgorithms}" 
                               FontSize="14" 
                               FontWeight="SemiBold" 
                               Foreground="{DynamicResource TextPrimaryColor}"
                               FontFamily="Segoe UI"
                               TextAlignment="Right"/>
                        </StackPanel>
                    </Grid>

                    <!-- Quick Actions -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="8"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="8"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0"
                        Content="View"
                        Style="{StaticResource SecondaryButton}"
                        Height="36"/>

                        <Button Grid.Column="2"
                        Content="Add Trade"
                        Style="{StaticResource SecondaryButton}"
                        Height="36"/>

                        <Button Grid.Column="4"
                        Content="Settings"
                        Style="{StaticResource SecondaryButton}"
                        Height="36"/>
                    </Grid>
                </StackPanel>
            </Border>
        </DataTemplate>

        <!-- Recent Trade Template -->
        <DataTemplate x:Key="RecentTradeTemplate">
            <Border Background="Transparent" Padding="20,16">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Left: Trade Type Badge + Symbol + Amount -->
                    <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="0,0,20,0">
                        <!-- BUY/SELL Badge -->
                        <Border Background="{Binding TradeTypeColor}"
                        CornerRadius="4"
                        Padding="8,4"
                        Margin="0,0,12,0"
                        VerticalAlignment="Center">
                            <TextBlock Text="{Binding TradeType}" 
                               FontSize="11" 
                               FontWeight="SemiBold" 
                               Foreground="White"
                               FontFamily="Segoe UI"/>
                        </Border>

                        <StackPanel VerticalAlignment="Center">
                            <TextBlock Text="{Binding Symbol}" 
                               FontSize="14" 
                               FontWeight="SemiBold" 
                               Foreground="{DynamicResource TextPrimaryColor}"
                               FontFamily="Segoe UI"/>
                            <TextBlock FontSize="12" 
                               Foreground="{DynamicResource TextSecondaryColor}"
                               FontFamily="Segoe UI">
                        <Run Text="{Binding Amount}"/>
                        <Run Text="@"/>
                        <Run Text="{Binding Price}"/>
                            </TextBlock>
                        </StackPanel>
                    </StackPanel>

                    <!-- Center: Portfolio Info + Exchange -->
                    <StackPanel Grid.Column="1" VerticalAlignment="Center">
                        <TextBlock Text="{Binding PortfolioName}" 
                           FontSize="12" 
                           Foreground="{DynamicResource TextSecondaryColor}"
                           FontFamily="Segoe UI"/>
                        <StackPanel Orientation="Horizontal" Margin="0,2,0,0">
                            <TextBlock Text="&#xE945;" 
                               FontFamily="Segoe MDL2 Assets" 
                               FontSize="10"
                               Foreground="{DynamicResource TextSecondaryColor}"
                               VerticalAlignment="Center"
                               Margin="0,0,4,0"/>
                            <TextBlock Text="{Binding Exchange}" 
                               FontSize="11" 
                               Foreground="{DynamicResource TextSecondaryColor}"
                               FontFamily="Segoe UI"
                               VerticalAlignment="Center"/>
                        </StackPanel>
                    </StackPanel>

                    <!-- Right: Status + Mode Badge + Time -->
                    <StackPanel Grid.Column="2" Orientation="Horizontal" Margin="0,0,20,0" VerticalAlignment="Center">
                        <!-- Status Badge -->
                        <Border Background="{Binding StatusColor}"
                        CornerRadius="4"
                        Padding="8,4"
                        Margin="0,0,8,0">
                            <TextBlock Text="{Binding Status}" 
                               FontSize="11" 
                               FontWeight="SemiBold" 
                               Foreground="White"
                               FontFamily="Segoe UI"/>
                        </Border>

                        <!-- TEST/LIVE Badge -->
                        <Border Background="{Binding ModeBadgeColor}"
                        CornerRadius="4"
                        Padding="6,4">
                            <TextBlock Text="{Binding ModeBadge}" 
                               FontSize="10" 
                               FontWeight="SemiBold" 
                               Foreground="White"
                               FontFamily="Segoe UI"/>
                        </Border>
                    </StackPanel>

                    <!-- Far Right: Time + Total -->
                    <StackPanel Grid.Column="3" HorizontalAlignment="Right" VerticalAlignment="Center">
                        <TextBlock Text="{Binding Total}" 
                           FontSize="14" 
                           FontWeight="SemiBold" 
                           Foreground="{DynamicResource TextPrimaryColor}"
                           FontFamily="Segoe UI"
                           TextAlignment="Right"/>
                        <TextBlock Text="{Binding Timestamp}" 
                           FontSize="11" 
                           Foreground="{DynamicResource TextSecondaryColor}"
                           FontFamily="Segoe UI"
                           TextAlignment="Right"
                           Margin="0,2,0,0"/>
                    </StackPanel>
                </Grid>
            </Border>
        </DataTemplate>

        <!-- Modern RadioButton Style -->
        <Style x:Key="ModernRadioButton" TargetType="RadioButton">
            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>

        <!-- Exchange Settings Content Template -->
        <DataTemplate x:Key="ExchangeSettingsContentTemplate">
            <StackPanel Margin="0,24,0,0">
                <!-- Add Key/Value Form -->
                <Grid Margin="0,0,0,24">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="12"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="12"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="12"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0">
                        <TextBlock Text="Key Name*" 
                                   FontSize="13"
                                   FontWeight="Medium"
                                   Foreground="{DynamicResource TextPrimaryColor}" 
                                   Margin="0,0,0,8"/>
                        <TextBox Text="{Binding ExchangeSettingsViewModel.KeyName, UpdateSourceTrigger=PropertyChanged}"
                                 Style="{StaticResource ModernTextBox}"
                                 Height="40"/>
                    </StackPanel>

                    <StackPanel Grid.Column="2">
                        <TextBlock Text="Key Value*" 
                                   FontSize="13"
                                   FontWeight="Medium"
                                   Foreground="{DynamicResource TextPrimaryColor}" 
                                   Margin="0,0,0,8"/>
                        <TextBox Text="{Binding ExchangeSettingsViewModel.KeyValue, UpdateSourceTrigger=PropertyChanged}"
                                 Style="{StaticResource ModernTextBox}"
                                 Height="40"/>
                    </StackPanel>

                    <CheckBox Grid.Column="4"
                              Content="Encrypt"
                              IsChecked="{Binding ExchangeSettingsViewModel.ShouldEncrypt}"
                              Foreground="{DynamicResource TextPrimaryColor}"
                              VerticalAlignment="Bottom"
                              Margin="0,0,0,8"/>

                    <Button Grid.Column="6"
                            Content="Add"
                            Command="{Binding ExchangeSettingsViewModel.AddExchangeDetailCommand}"
                            Style="{StaticResource PrimaryButton}"
                            Width="100"
                            Height="40"
                            VerticalAlignment="Bottom"/>
                </Grid>

                <!-- Existing Keys List -->
                <TextBlock Text="Saved Keys" 
                           FontSize="14"
                           FontWeight="SemiBold"
                           Foreground="{DynamicResource TextPrimaryColor}"
                           Margin="0,0,0,12"/>

                <ItemsControl ItemsSource="{Binding ExchangeSettingsViewModel.ExchangeDetails}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border Background="{DynamicResource BackgroundColor}"
                                    BorderBrush="{DynamicResource BorderColor}"
                                    BorderThickness="1"
                                    CornerRadius="8"
                                    Padding="16"
                                    Margin="0,0,0,12">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <StackPanel Grid.Column="0" Margin="0,0,24,0">
                                        <TextBlock Text="Key Name" 
                                           FontSize="11"
                                           Foreground="{DynamicResource TextSecondaryColor}"
                                           Margin="0,0,0,4"/>
                                        <TextBlock Text="{Binding KeyName}" 
                                           FontSize="14"
                                           FontWeight="SemiBold"
                                           Foreground="{DynamicResource TextPrimaryColor}"/>
                                    </StackPanel>

                                    <StackPanel Grid.Column="1">
                                        <TextBlock Text="Key Value" 
                                           FontSize="11"
                                           Foreground="{DynamicResource TextSecondaryColor}"
                                           Margin="0,0,0,4"/>
                                        <TextBlock Text="{Binding KeyValue}" 
                                           FontSize="14"
                                           Foreground="{DynamicResource TextPrimaryColor}"
                                           TextTrimming="CharacterEllipsis"/>
                                    </StackPanel>

                                    <Border Grid.Column="2"
                                            Background="{Binding EncryptionBadgeColor}"
                                            CornerRadius="4"
                                            Padding="8,4"
                                            Margin="0,0,12,0"
                                            VerticalAlignment="Center">
                                        <TextBlock Text="{Binding EncryptionBadge}" 
                                           FontSize="10"
                                           FontWeight="SemiBold"
                                           Foreground="White"/>
                                    </Border>

                                    <Button Grid.Column="3"
                                    Command="{Binding DataContext.ExchangeSettingsViewModel.DeleteExchangeDetailCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                    CommandParameter="{Binding}"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    Width="32"
                                    Height="32"
                                    Cursor="Hand"
                                    ToolTip="Delete">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="Button">
                                                            <Border Background="{TemplateBinding Background}" 
                                                            CornerRadius="4">
                                                                <TextBlock Text="&#xE74D;" 
                                                                   FontFamily="Segoe MDL2 Assets"
                                                                   FontSize="16"
                                                                   Foreground="#db4f4a"
                                                                   HorizontalAlignment="Center"
                                                                   VerticalAlignment="Center"/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Background" Value="{DynamicResource HoverColor}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <!-- Status Message -->
                <TextBlock Text="{Binding ExchangeSettingsViewModel.StatusMessage}"
                   FontSize="13"
                   Foreground="{DynamicResource AccentColor}"
                   Margin="0,12,0,0"
                   Visibility="{Binding ExchangeSettingsViewModel.StatusMessage, Converter={StaticResource StringToVisibilityConverter}}"/>
            </StackPanel>
        </DataTemplate>

        <!-- DataGrid Style -->
        <Style x:Key="DataGridStyle" TargetType="DataGrid">
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="RowHeight" Value="56"/>
            <Setter Property="RowBackground" Value="{DynamicResource SurfaceColor}"/>
            <Setter Property="AlternatingRowBackground" Value="{DynamicResource BackgroundColor}"/>
        </Style>

        <!-- DataGrid Column Header Style -->
        <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Padding" Value="16,12"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <!-- DataGrid Cell Style -->
        <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="16,0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        VerticalAlignment="Stretch">
                            <ContentPresenter VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource HoverColor}"/>
                    <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- DataGrid Row Style -->
        <Style x:Key="DataGridRowStyle" TargetType="DataGridRow">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <!-- Compact DataGrid Row Style -->
        <Style x:Key="CompactDataGridRowStyle" TargetType="DataGridRow">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="30"/>
        </Style>

        <!-- Compact DataGrid Cell Style -->
        <Style x:Key="CompactDataGridCellStyle" TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource HoverColor}"/>
                    <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Pagination Controls Style -->
        <Style x:Key="PaginationContainerStyle" TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Margin" Value="0,16,0,0"/>
        </Style>

        <Style x:Key="PaginationButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource SurfaceColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Margin" Value="4,0"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="6"
                        Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource HoverColor}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                    <Setter Property="Cursor" Value="Arrow"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PaginationComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="{DynamicResource SurfaceColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Margin" Value="8,0"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Height" Value="36"/>
        </Style>

        <Style x:Key="ExportButtonStyle" TargetType="Button" BasedOn="{StaticResource PrimaryButton}">
            <Setter Property="Margin" Value="8,0,0,0"/>
            <Setter Property="Padding" Value="16,8"/>
        </Style>

        <!-- Search/Filter Controls -->
        <Style x:Key="SearchBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="{DynamicResource SurfaceColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="12,10"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="8">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <!-- Search Icon -->
                                <TextBlock Grid.Column="0"
                                   Text="&#xE721;"
                                   FontFamily="Segoe MDL2 Assets"
                                   FontSize="16"
                                   Foreground="{DynamicResource TextSecondaryColor}"
                                   VerticalAlignment="Center"
                                   Margin="12,0,8,0"/>

                                <!-- Text Input -->
                                <ScrollViewer Grid.Column="1"
                                      x:Name="PART_ContentHost"
                                      VerticalAlignment="Center"
                                      Margin="0,0,12,0"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DatePickerStyle" TargetType="DatePicker">
            <Setter Property="Background" Value="{DynamicResource SurfaceColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="40"/>
        </Style>

    </Application.Resources>
</Application>